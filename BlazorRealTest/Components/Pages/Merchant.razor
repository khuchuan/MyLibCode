@page "/"

@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@using BlazorRealTest.Entity

<div class="slb-white-box-shadow">
    <Card Size="default">
        <TitleTemplate>
            <Icon Type="shop" Theme="outline" /> @_title
        </TitleTemplate>
        <Extra>
            <Button Type="@ButtonType.Primary" OnClick="() => AddUpdateProduct(0, 0, 0)" Icon="plus">
                Thêm mới
            </Button>
        </Extra>
        <Body>

            <Form ValidateOnChange="true"
                  Model="_request"
                  Size="default"
                  LabelAlign="AntLabelAlignType.Right"
                  LabelCol=@(new ColLayoutParam { Xl = 24, Lg = 24, Md = 4, Sm = 4, Xs = 4 })
                  WrapperCol=@(new ColLayoutParam { Xl = 24, Lg = 24, Md = 20, Sm = 20, Xs = 20 })
                  OnFinish="OnFinish"
                  Layout="vertical"
                  ValidateMode=@FormValidateMode.Complex
                  RequiredMark=@ChosenRequiredMark>

                <Row Gutter="16">
                    <AntDesign.Col Xs="24" Sm="24" Md="24" Lg="12" Xl="12" Xxl="6">
                        <FormItem>
                            <Search Placeholder="Mã/Tên Merchant" ClassicSearchIcon />
                         </FormItem>
                     </AntDesign.Col>

                     <AntDesign.Col Xs="24" Sm="24" Md="24" Lg="12" Xl="12" Xxl="6">
                         <FormItem>
                             <Select TItem="EnumsDTO"
                                     TItemValue="int"
                                     DataSource="@_listStatus"
                                     @bind-Value="@_request.Status"
                                     LabelName="@(nameof(EnumsDTO.Name))"
                                     ValueName="@nameof(EnumsDTO.Id)"
                                     Placeholder="Chọn trạng thái"
                                     DefaultActiveFirstOption="false"
                                        AllowClear
                                        EnableSearch>
                            </Select>
                        </FormItem>
                    </AntDesign.Col>

                    <AntDesign.Col Xs="24" Sm="24" Md="24" Lg="8" Xl="8" Xxl="6" Style="margin-left: auto!important;text-align: right;">
                        <FormItem>
                            <Button Type="@ButtonType.Primary" HtmlType="submit">
                                <Icon Type="search" Theme="outline" />
                                <span>Tra cứu</span>
                            </Button>
                        </FormItem>
                    </AntDesign.Col>
                </Row>
            </Form>

            <Divider Style="margin: 16px 0" />

            <Table DataSource="@listMerchant" TItem="MerchantInfo" Size="TableSize.Small">
                <ColumnDefinitions>
                    <PropertyColumn style="margin-left: 10px;" Width="30%" Property="c=>c.MerchantName" />
                    <PropertyColumn Property="c=>c.MerchantCode" />

                    <Column style="padding-left: 4px;" TData="string" Title="Trạng thái">
                        @if (context.Status == 1)
                        {
                            <span>
                                <Badge Status="success" />
                                Hoạt động
                            </span>
                        }
                        else
                        {
                            <span>
                                <Badge Status="error" />
                                Không hoạt động
                            </span>
                        }
                    </Column>
                    <ActionColumn Title="Thao tác">
                        <ChildContent>
                            <Space>                                
                                <SpaceItem>
                                    <Tooltip Title="Sửa">
                                        <Button Size="small" OnClick="() => {}" Icon="edit"></Button>
                                    </Tooltip>
                                </SpaceItem>
                            </Space>
                        </ChildContent>
                    </ActionColumn>
                </ColumnDefinitions>

                <PaginationTemplate>
                    <Divider />
                    <Row Justify="space-between" Align="middle">
                        <div>Hiển thị @(_request.PageSize > _merchantDTO.TotalCount ? _merchantDTO.TotalCount : _request.PageSize) trên tổng số @_merchantDTO.TotalCount bản ghi.</div>
                        <Pagination ShowSizeChanger="true"
                                    PageSizeOptions="new int[] {5, 10, 15}"
                                    OnChange="OnShowSizeChangeAsync"
                                    @bind-Current="_request.PageIndex"
                                    @bind-PageSize="_request.PageSize"
                                    Total="@(_merchantDTO.TotalCount)" />
                    </Row>
                </PaginationTemplate>

            </Table>

        </Body>
    </Card>
</div>

@code {
    [Inject]
    private IMerchantRepository merchantRepository { get; set; } = default;

    private string _title = "Danh sách merchant";

    private List<MerchantInfo> listMerchant = new List<MerchantInfo>();
    private List<EnumsDTO> _listStatus = new List<EnumsDTO>();
    private MerchantDTO _merchantDTO = new();
    private MerchantRequestModel _request = new MerchantRequestModel();

    public FormRequiredMark ChosenRequiredMark { get; set; } = FormRequiredMark.Required;

    public class MerchantRequestModel
    {
        public int PageIndex { get; set; } = 1;
        public int PageSize { get; set; } = 20;
        public int Status { set; get; }
        public string? MerchantNameOrCode { set; get; }
    }

    protected override async Task OnInitializedAsync()
    {
        // _list_Services = await _service.GetListService();
        // _list_Providers = await _service.GetListProvider();
        GetDataAsync();

        _listStatus = new List<EnumsDTO>{
            new EnumsDTO{Id = 1, Name = "Hoạt động"},
            new EnumsDTO{Id = 2, Name = "Không hoạt động"}
        };
    }

    private void OnFinish(EditContext context)
    {
        Console.WriteLine("Has finish");
    }

    private void AddUpdateProduct(int id, int serviceID, int providerID)
    {
        Console.WriteLine("AddUpdateProduct");
        //_navigationManager.NavigateTo($"/merchant/add-update/{id}/{serviceID}/{providerID}");
    }

    private async Task OnShowSizeChangeAsync(PaginationEventArgs args)
    {
        if (_request.PageIndex != args.Page || _request.PageSize != args.PageSize)
        {
            _request.PageIndex = args.Page;
            _request.PageSize = args.PageSize;
            await GetDataAsync();
        }
    }

    private async Task GetDataAsync()
    {
        _merchantDTO = await merchantRepository.GetMerchantsAsync(1, _request.PageIndex, _request.PageSize);
        listMerchant = _merchantDTO.Data;
    }



}