@page "/Transaction/History"

@using Helper
@using System.Globalization
@using System.Text.Json
@using AntDesign;
@using BlazorApp1.Models;

 @* Phan lua chon dieu kien - Start *@
<Form Class="transaction-histort-form"
      ValidateOnChange="true"
      Model="@_model"
      Size="default"
      LabelAlign="AntLabelAlignType.Right"
      LabelCol=@(new ColLayoutParam { Xl = 8, Lg = 8, Md = 8, Sm = 24, Xs = 24 })
      WrapperCol=@(new ColLayoutParam { Xl = 16, Lg = 16, Md = 16, Sm = 24, Xs = 24 })
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed">
    <Row Gutter="16">
        <AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="8" Xxl="6">
            <FormItem Label="Thời gian">
                <RangePicker @ref="picker" CultureInfo="@CiVn" Format="dd/MM/yyyy" InputReadOnly="true" AllowClear="false" Style="width: 100%"
                             @bind-Value="@context.RangePicker"
                             DisabledDate="date => date >= DateTime.Now">
                    <RenderExtraFooter>
                        <Row Style="padding:8px" Align="middle" Justify="center" Gutter="(8, 8)">
                            <AntDesign.Col Xxl="6" Xl="6" Lg="6" Md="6" Sm="6" Xs="6">
                                <Button Block="true" class="extra-range-picker-item" OnClick=@(() => HandleSetValueRangerPicker("today"))>Hôm nay</Button>
                            </AntDesign.Col>
                            <AntDesign.Col Xxl="6" Xl="6" Lg="6" Md="6" Sm="6" Xs="6">
                                <Button Block="true" class="extra-range-picker-item" OnClick=@(() => HandleSetValueRangerPicker("yesterday"))>Hôm qua</Button>
                            </AntDesign.Col>
                            <AntDesign.Col Xxl="6" Xl="6" Lg="6" Md="6" Sm="6" Xs="6">
                                <Button Block="true" class="extra-range-picker-item" OnClick=@(() => HandleSetValueRangerPicker("7DaysBefore"))>7 ngày trước</Button>
                            </AntDesign.Col>
                            <AntDesign.Col Xxl="6" Xl="6" Lg="6" Md="6" Sm="6" Xs="6">
                                <Button Block="true" class="extra-range-picker-item" OnClick=@(() => HandleSetValueRangerPicker("30DaysBefore"))>30 ngày trước</Button>
                            </AntDesign.Col>
                            <AntDesign.Col Xxl="6" Xl="6" Lg="6" Md="6" Sm="6" Xs="6">
                                <Button Block="true" class="extra-range-picker-item" OnClick=@(() => HandleSetValueRangerPicker("thisMonth"))>Tháng này</Button>
                            </AntDesign.Col>
                            <AntDesign.Col Xxl="6" Xl="6" Lg="6" Md="6" Sm="6" Xs="6">
                                <Button Block="true" class="extra-range-picker-item" OnClick=@(() => HandleSetValueRangerPicker("lastMonth"))>Tháng trước</Button>
                            </AntDesign.Col>
                            <AntDesign.Col Xxl="6" Xl="6" Lg="6" Md="6" Sm="6" Xs="6">
                                <Button Block="true" class="extra-range-picker-item" OnClick=@(() => HandleSetValueRangerPicker("thisYear"))>Năm nay</Button>
                            </AntDesign.Col>
                            <AntDesign.Col Xxl="6" Xl="6" Lg="6" Md="6" Sm="6" Xs="6">
                                <Button Block="true" class="extra-range-picker-item" OnClick=@(() => HandleSetValueRangerPicker("lastYear"))>Năm trước</Button>
                            </AntDesign.Col>
                        </Row>
                    </RenderExtraFooter>
                </RangePicker>
            </FormItem>
        </AntDesign.Col>

        <AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="8" Xxl="6">
            <FormItem Label="Trạng thái">
                <Select EnableSearch @bind-Value="@context.PayBillStatus"
                        TItemValue="int?"
                        DefaultValue="-9999"
                        TItem="string">
                    <SelectOptions>
                        <SelectOption TItemValue="int?" TItem="string"
                                      Value="-9999" Label="Tất cả" />
                        <SelectOption TItemValue="int?" TItem="string"
                                      Value=@ResultCode.Status.Timeout Label=@ResultCode.GetStatusMessage(ResultCode.Status.Timeout) Class="text-warning" />
                        <SelectOption TItemValue="int?" TItem="string"
                                      Value=@ResultCode.Status.Failed Label=@ResultCode.GetStatusMessage(ResultCode.Status.Failed) Class="text-danger" />
                        <SelectOption TItemValue="int?" TItem="string"
                                      Value=@ResultCode.Status.Success Label=@ResultCode.GetStatusMessage(ResultCode.Status.Success) />
                    </SelectOptions>
                </Select>
            </FormItem>
        </AntDesign.Col>

        <AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="8" Xxl="6">
            <FormItem Label="Mã hóa đơn">
                <Input Placeholder="Mã hóa đơn" @bind-Value="@context.BillingCode" />
            </FormItem>
        </AntDesign.Col>

        <AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="8" Xxl="6">
            <FormItem Label="Mã giao dịch">
                <Input Placeholder="Mã giao dịch" @bind-Value="@context.TransactionId" />
            </FormItem>
        </AntDesign.Col>

        <AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="8" Xxl="6">
            <FormItem Label="Dịch vụ">
                <Select @bind-Value="@context.Service"
                        DefaultValue="@(string.Empty)"
                        OnSelectedItemChanged="@HandleSelectService"
                        Style="width: 100%;"
                        TItemValue="string"
                        TItem="string">
                    <SelectOptions>
                        <SelectOption TItemValue="string" TItem="string" Value="@(string.Empty)" Label="Tất cả" />
                        @foreach (var item in Constants.GetListService())
                        {
                            <SelectOption TItemValue="string" TItem="string" Value=@(item) Label="@(Constants.GetServiceLabel(item))" />
                        }
                    </SelectOptions>
                </Select>
            </FormItem>
        </AntDesign.Col>
        <AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="8" Xxl="6">
            <FormItem Label="Trạng thái Mail">
                <Select @bind-Value="@context.SendMail"
                        DefaultValue="@(null)"
                        Style="width: 100%;"
                        TItemValue="int?"
                        TItem="string">
                    <SelectOptions>
                        <SelectOption TItemValue="int?" TItem="string" Value="@(null)" Label="Tất cả" />
                        <SelectOption TItemValue="int?" TItem="string" Value="@Constants.ResSendMail.Status.Success" Label="@Constants.ResSendMail.GetMessage(Constants.ResSendMail.Status.Success)" />
                        <SelectOption TItemValue="int?" TItem="string" Value="@Constants.ResSendMail.Status.Faile" Class="text-danger" Label="@Constants.ResSendMail.GetMessage(Constants.ResSendMail.Status.Faile)" />
                        <SelectOption TItemValue="int?" TItem="string" Value="@Constants.ResSendMail.Status.Pending" Class="text-warning" Label="@Constants.ResSendMail.GetMessage(Constants.ResSendMail.Status.Pending)" />
                        <SelectOption TItemValue="int?" TItem="string" Value="@Constants.ResSendMail.Status.UnSent" Class="text-warning" Label="@Constants.ResSendMail.GetMessage(Constants.ResSendMail.Status.UnSent)" />

                    </SelectOptions>
                </Select>
            </FormItem>
        </AntDesign.Col>
        <AntDesign.Col Xs="24" Sm="24" Md="12" Lg="12" Xl="8" Xxl="12">
            <FormItem WrapperColSpan="24">
                <FlexBoxFlexEnd>
                    <Button Type="@ButtonType.Primary" HtmlType="submit">
                        <Icon Type="search" Theme="outline" />
                        <span>Tra cứu</span>
                    </Button>

                    <Button Class="ml-1" Type="@ButtonType.Default">
                        <Icon Type="file-excel" Theme="outline" />
                        <span>Xuất báo cáo</span>
                    </Button>


                </FlexBoxFlexEnd>
            </FormItem>
        </AntDesign.Col>
    </Row>

</Form>
@* Phan lua chon dieu kien - End *@

  
    @* Phan than hien thi du lieu - Start *@
    
    <Divider Style="margin: 16px 0" />
    @if (_dataTransactionDTO != null && _dataTransactionDTO.Count > 0 )
    {
                <Table TItem="DTO.TransactionHistoryInfo"
               Size="TableSize.Small"
               Class="custom-table-small"
               DataSource="@_dataTransactionDTO"
               @bind-PageIndex="@_request.PageIndex"
               @bind-PageSize="@_request.PageSize"
               Total="@_dataTransactionDTO.Count"
               Bordered="true"
               ScrollX="1400"
               RowClassName="@(x => ResultCode.GetColor(x.Data.Status))"
               HidePagination="true">
                    <AntDesign.Column @bind-Field=@context.CreatedTime Hidden="@checkHide("CreatedTime")" Width="140px" Style="text-align: center;">
                        <TitleTemplate>
                            <FlexBoxCenter>
                                <Icon OnClick=@(() => HandleClickSort("CreateTime")) class=@(RenderClassSortIcon("CreateTime")) Type="@RenderTypeSortIcon()" Theme="outline" />
                                <div class="text-center">@getTitle("CreatedTime")</div>
                            </FlexBoxCenter>
                        </TitleTemplate>
                        <ChildContent>
                            @context.CreatedTime.ToString("dd/MM/yyyy HH:mm:ss")
                        </ChildContent>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.ResponseTime  Hidden="@checkHide("ResponseTime")" Title="@getTitle("ResponseTime")" Width="140px" Class="text-center">
                        <ChildContent>
                            @context.ResponseTime.ToString("dd/MM/yyyy HH:mm:ss")
                        </ChildContent>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.TrackingId Hidden="@checkHide("TrackingId")" Ellipsis Title="@getTitle("TrackingId")" Class="text-center">
                        <ChildContent>
                            <Text Ellipsis="true">@context.TrackingId</Text>
                        </ChildContent>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.Username Hidden="@checkHide("Username")" Width="120px" Style="text-align: center;">
                        <TitleTemplate>
                            <FlexBoxCenter>
                                <Icon OnClick=@(() => HandleClickSort("Username")) class=@(RenderClassSortIcon("Username")) Type="@RenderTypeSortIcon()" Theme="outline" />
                                <div class="text-center">@getTitle("Username")</div>
                            </FlexBoxCenter>
                        </TitleTemplate>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.Partner Hidden="@checkHide("Partner")" Style="text-align: center;" Width="7%">
                        <TitleTemplate>
                            <FlexBoxCenter>
                                <Icon OnClick=@(() => HandleClickSort("Partner")) class=@(RenderClassSortIcon("Partner")) Type="@RenderTypeSortIcon()" Theme="outline" Style="text-align: center;" />
                                <div class="text-center">@getTitle("Partner")</div>
                            </FlexBoxCenter>
                        </TitleTemplate>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.ServiceId Ellipsis Hidden="@checkHide("ServiceId")" Class="text-center">
                        <TitleTemplate>
                            <FlexBoxCenter>
                                <Icon OnClick=@(() => HandleClickSort("ServiceId")) class=@(RenderClassSortIcon("ServiceId")) Type="@RenderTypeSortIcon()" Theme="outline" Style="text-align: center;" />
                                <div class="text-center">@getTitle("ServiceId")</div>
                            </FlexBoxCenter>
                        </TitleTemplate>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.ProductCode Ellipsis Hidden="@checkHide("ProductCode")" Class="text-center">
                        <TitleTemplate>
                            <FlexBoxCenter>
                                <Icon OnClick=@(() => HandleClickSort("ProductCode")) class=@(RenderClassSortIcon("ProductCode")) Type="@RenderTypeSortIcon()" Theme="outline" Style="text-align: center;" />
                                <div class="text-center">@getTitle("ProductCode")</div>
                            </FlexBoxCenter>
                        </TitleTemplate>
                    </AntDesign.Column>

                      <AntDesign.Column @bind-Field=@context.PackCode Ellipsis Hidden="@checkHide("PackCode")" Class="text-center">
                        <TitleTemplate>
                            <FlexBoxCenter>
                                <Icon OnClick=@(() => HandleClickSort("PackCode")) class=@(RenderClassSortIcon("PackCode")) Type="@RenderTypeSortIcon()" Theme="outline" Style="text-align: center;" />
                        <div class="text-center">@getTitle("PackCode")</div>
                            </FlexBoxCenter>
                        </TitleTemplate>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.BillingCode Hidden="@checkHide("BillingCode")" Ellipsis Title="@getTitle("BillingCode")" Class="text-center" />


                    <AntDesign.Column @bind-Field=@context.Amount Hidden="@checkHide("Amount")" Style="text-align: center;" Width="105px">
                        <TitleTemplate>
                            <FlexBoxCenter>
                                <Icon OnClick=@(() => HandleClickSort("Amount")) class=@(RenderClassSortIcon("Amount")) Type="@RenderTypeSortIcon()" Theme="outline" />
                                <div class="text-center">@getTitle("Amount")</div>
                            </FlexBoxCenter>
                        </TitleTemplate>
                        <ChildContent>
                            @NumberFormat.ThousandSeparator(context.Amount)
                        </ChildContent>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.ActualAmount Hidden="@checkHide("ActualAmount")" Title="@getTitle("ActualAmount")" Class="text-center" Width="100px">
                        <ChildContent>
                            @NumberFormat.ThousandSeparator(context.ActualAmount)
                        </ChildContent>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.Status Hidden="@checkHide("Status")" Class="text-center" Width="100px">
                        <TitleTemplate>
                            <FlexBoxCenter>
                                <Icon OnClick=@(() => HandleClickSort("Status")) class=@(RenderClassSortIcon("Status")) Type="@RenderTypeSortIcon()" Theme="outline" />
                                <div class="text-center">@getTitle("Status")</div>
                            </FlexBoxCenter>
                        </TitleTemplate>
                        <ChildContent>
                            <Text Type="@(context.Status != ResultCode.Status.Success ? ResultCode.GetColor(context.Status) : "")">@ResultCode.GetStatusMessage(context.Status)</Text>
                        </ChildContent>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.Status Hidden="@checkHide("SendMail")" Class="text-center" Width="100px">
                        <TitleTemplate>
                            <FlexBoxCenter>
                                <Icon OnClick=@(() => HandleClickSort("SendMail")) class=@(RenderClassSortIcon("SendMail")) Type="@RenderTypeSortIcon()" Theme="outline" />
                                <div class="text-center">@getTitle("SendMail")</div>
                            </FlexBoxCenter>
                        </TitleTemplate>
                        <ChildContent>
                            <Text Type="@GetSendMailColor(context)">@(context.SendMail != null ? Constants.ResSendMail.GetMessage(context.SendMail.GetValueOrDefault(-99)) : "")</Text>
                        </ChildContent>
                    </AntDesign.Column>

                    <AntDesign.Column @bind-Field=@context.ResultCode Hidden="@checkHide("ResultCode")" Title="@getTitle("ResultCode")" Class="text-center" Width="100px" />

                    <ActionColumn Fixed="right" Title="Tác vụ" Class="text-center" Width="80px">
                        <ChildContent>
                            <button title="Thông tin chi tiết" @onclick="() => HandleClickViewDetail(context.Id)" type="button" class="btn btn-xs bg-info">
                                <i class="fas fa-info-circle"></i>
                            </button>
                            @if (context.Status == ResultCode.Status.Success && context.SendMail != Constants.ResSendMail.Status.Pending && context.SendMail != Constants.ResSendMail.Status.Success && (context.ServiceId.Equals(Constants.Service.DATACARD) || context.ServiceId.Equals(Constants.Service.GAMECARD) || context.ServiceId.Equals(Constants.Service.PHONECARD)))
                            {
                                <button title="Gửi Email" @onclick="() => HandleSendMailSoftpin(context)" type="button" class="btn btn-xs bg-info ml-1">
                                    <i class="fas fa-paper-plane"></i>
                                </button>
                            }
                        </ChildContent>
                    </ActionColumn>
                </Table>

                <Divider />
                <Row Justify="space-between" Align="middle">
                    <div>Hiển thị @(_request.PageSize > _dataTransactionDTO.Count ? _dataTransactionDTO.Count : _request.PageSize) trên tổng số @_dataTransactionDTO.Count bản ghi.</div>
                    <AntDesign.Col>
                        <Pagination ShowSizeChanger="true"
                            PageSizeOptions="new int[] { 20, 30 ,50 , 59 }"
                            OnChange="OnShowSizeChange"
                            @bind-Current="@_request.PageIndex"
                            @bind-PageSize="@_request.PageSize"
                            Total="@_dataTransactionDTO.Count" />
                    </AntDesign.Col>
                </Row>
    }

    @* Phan than hien thi du lieu - End *@


 

@code {
    private RangePicker<DateTime?[]> picker;
    CultureInfo CiVn = CultureInfo.GetCultureInfo("vi-VN");

    DatePickerLocale VN = new DatePickerLocale
        {
            FirstDayOfWeek = DayOfWeek.Monday,
            Lang = new DateLocale
            {
                YearFormat = "yyyy",
                MonthFormat = "MMM",
                DateSelect = "Chọn ngày",
                WeekSelect = "Chọn tuần",
                MonthSelect = "Chọn tháng",
                YearSelect = "Chọn năm",
                QuarterSelect = "Chọn quý",
                Today = "Hôm nay"
            }
        };

    private void HandleSetValueRangerPicker(string time)
    {
        DateTime beginDate = DateTime.Today;
        DateTime endDate = DateTime.Today;
        switch (time)
        {
            case "today":
                endDate = DateTime.Today;
                break;
            case "yesterday":
                beginDate = DateTime.Today.AddDays(-1);
                endDate = DateTime.Today.AddDays(-1);
                break;
            case "7DaysBefore":
                beginDate = DateTime.Today.AddDays(-7);
                endDate = DateTime.Today;
                break;
            case "30DaysBefore":
                beginDate = DateTime.Today.AddDays(-30);
                endDate = DateTime.Today;
                break;
            case "thisMonth":
                beginDate = DateTimeExtend.FirstDayOfMonth(DateTime.Today);
                endDate = DateTimeExtend.LastDayOfMonthStartTime(DateTime.Today);
                break;
            case "lastMonth":
                beginDate = DateTimeExtend.FirstDayOfMonth(DateTime.Today.AddMonths(-1));
                endDate = DateTimeExtend.LastDayOfMonthStartTime(DateTime.Today.AddMonths(-1));
                break;
            case "thisYear":
                beginDate = DateTimeExtend.FirstDayOfYear(DateTime.Today);
                endDate = DateTime.Today;
                break;
            case "lastYear":
                beginDate = DateTimeExtend.FirstDayOfYear(DateTime.Today.AddYears(-1));
                endDate = DateTimeExtend.LastDayOfYearStartTime(DateTime.Today.AddYears(-1));
                break;
            default:
                break;
        }
        _model.RangePicker = new DateTime?[] { beginDate, endDate };
        picker.Close();
        StateHasChanged();
    }

    private void HandleSelectService(string selectedService)
    {
        _model.BillingName = string.Empty;
        StateHasChanged();
    }

    bool checkHide(string key)
    {
        return _selectedColumns.Any(x => x == key);
    }

     string getTitle(string key)
    {
        var column = _columns.FirstOrDefault(x => x.Key == key);
        return column != null ? column.Title : "Unknown";
    }

    private async Task OnSelectedItemsChangedHandler(IEnumerable<Column> values)
    {
        await _localStorageService.SetItemAsync<IEnumerable<Column>>("View_Transaction_List", values);
    }    

     private static string GetSendMailColor(DTO.TransactionHistoryInfo context)
    {
        switch (context.SendMail)
        {
            case Constants.ResSendMail.Status.Pending:
            case Constants.ResSendMail.Status.UnSent:
                return context.ServiceId.ToUpper().Contains("CARD") ? "warning" : "";
            case Constants.ResSendMail.Status.Faile:
                return "danger";
            default:
                return "";
        }

    }

}
